from lxml import etree

from bs4 import BeautifulSoup
import requests

#html = requests.get('https://jisho.org/search/万%20%23common')

hira = [ 'あ', 'あい', 'あく', 'あつ', 'あん', 'い', 'いき', 'いく', 'いち', 'いつ', 'いん', 'う', 'うん', 'うつ', 'えん', 'え', 'えき', 'えつ', 'えい', 'お', 'おう', 'おん', 'おつ', 'おく', 'か', 'が', 'かく', 'かい', 'がい', 'がく', 'かつ', 'かち', 'かん', 'がん', 'がつ', 'がっ', 'かっ', 'きゅう', 'きょう', 'ぎ', 'きゃく', 'き', 'きん', 'きく', 'きち', 'きつ', 'きゃ', 'ぎゃく', 'ぎゅう', 'きょ', 'ぎょ', 'ぎょう', 'きょく', 'ぎょく', 'ぎん', 'きけ', 'ぐ', 'く', 'ぐう', 'くう', 'くつ', 'くん', 'ぐん', 'げ', 'け', 'けい', 'けん', 'げん', 'げき', 'げい', 'けき', 'けつ', 'けち', 'げつ', 'ごう', 'こう', 'こく', 'こ', 'こつ', 'ご', 'ごく', 'ごん', 'こん', 'こち', 'さ', 'ざ', 'さい', 'ざい', 'さく', 'さん', 'さつ', 'ざつ', 'ざん', 'さっ', 'じょう', 'しょう', 'し', 'じ', 'しゃ', 'しょ', 'しゅ', 'しゃく', 'しん', 'しき', 'じく', 'しち', 'しつ', 'しゅう', 'じつ', 'じゃ', 'じゃく', 'じゅ', 'じゅう', 'しゅく', 'じっ', 'じゅっ', 'じゅく', 'しゅつ', 'じゅつ', 'しゅん', 'じゅん', 'じょ', 'しゃん', 'しょく', 'じき', 'じょく', 'じん', 'じか', 'すい', 'す', 'ず', 'すく', 'ずい', 'すう', 'すん', 'せい', 'せき', 'せん', 'せつ', 'ぜん', 'せ', 'ぜ', 'ぜい', 'せち', 'ぜつ', 'せんと', 'そう', 'そ', 'そく', 'ぞく', 'ぞう', 'そつ', 'そん', 'ぞん', 'たん', 'だ', 'た', 'たい', 'だあす', 'だい', 'たく', 'だく', 'たつ', 'だつ', 'だん', 'ちゅう', 'ち', 'ぢゅう', 'ちょう', 'ちょ', 'ちゃん', 'ちく', 'ちつ', 'ちゃ', 'ちゃく', 'ちゅ', 'ちん', 'ちょく', 'つ', 'つい', 'つう', 'て', 'てん', 'でき', 'てい', 'てき', 'で', 'でい', 'てつ', 'でん', 'とう', 'と', 'とん', 'どう', 'ど', 'とく', 'どく', 'とつ', 'どん', 'なん', 'ない', 'な', 'なっ', 'に', 'にゃく', 'にゃ', 'にゅう', 'にょ', 'にょう', 'にん', 'にく', 'にち', 'ぬ', 'ねん', 'ねい', 'ねつ', 'のん', 'のう', 'ばい', 'はん', 'は', 'はく', 'ば', 'はい', 'ばく', 'はち', 'はつ', 'ばつ', 'ばち', 'ばん', 'はっ', 'びょう', 'ひょう', 'びゃく', 'ひ', 'ひつ', 'び', 'ひゃく', 'ひん', 'びん', 'びつ', 'ぶん', 'ふ', 'ふく', 'ぶ', 'ふう', 'ふつ', 'ぶつ', 'ふん', 'ふらん', 'べい', 'へい', 'へつ', 'へき', 'べつ', 'へん', 'べん', 'ほ', 'ぼう', 'ほう', 'ほく', 'ほつ', 'ぼち', 'ほん', 'ぼん', 'ぼ', 'ほっ', 'ぼっ', 'ぼく', 'ぼつ', 'まい', 'ま', 'まあ', 'まく', 'まつ', 'まん', 'み', 'みょう', 'みつ', 'みゃく', 'みん', 'む', 'めい', 'めえとる', 'めつ', 'めん', 'も', 'もつ', 'もん', 'もう', 'もく', 'やく', 'や', 'ゆい', 'ゆう', 'ゆ', 'よう', 'よく', 'よ', 'らく', 'らい', 'ら', 'らん', 'らつ', 'りょう', 'りゅう', 'り', 'りく', 'りつ', 'りち', 'りっとる', 'りゃく', 'りょ', 'りょく', 'りき', 'りい', 'りん', 'る', 'るい', 'れん', 'れい', 'れつ', 'れき', 'れっき', 'れ', 'ろく', 'ろう', 'ろん', 'ろ', 'わ', 'わい', 'わく', 'わ', 'ん' ]
chars = [
    '\u30A2', #a
    '\u30A4', #i
    '\u30A6', #u
    '\u30A8', #e
    '\u30AA', #o
    
    "[\u30AB\u30AC]", #ka ga
    "[\u30AD\u30AE]", #ki gi
    "[\u30AF\u30B0]", #ku gu
    "[\u30B1\u30B2]", #ke ge
    "[\u30B3\u30B4]", #ko go
   
    "[\u30B5\u30B6]", #sa za
    "[\u30B7\u30B8]", #si zi
    "[\u30B9\u30BA]", #su zu
    "[\u30BB\u30BC]", #se ze
    "[\u30BD\u30BE]", #so zo
    
    "[\u30BF\u30C0]", #ta da
    "[\u30C1\u30C2]", #ti di
    "[\u30C4\u30C5]", #tu du
    "[\u30C6\u30C7]", #te de
    "[\u30C8\u30C9]", #to do
    
    '\u30CA', #na
    '\u30CB', #ni
    '\u30CC', #nu
    '\u30CD', #ne
    '\u30CE', #no
    
    "[\u30CF\u30D0\u30D1]", #ha ba pa
    "[\u30D2\u30D3\u30D4]", #hi bi pi
    "[\u30D5\u30D6\u30D7]", #hu bu pu
    "[\u30D8\u30D9\u30DA]", #he be pe
    "[\u30DB\u30DC\u30DD]", #ho bo po
    
    '\u30DE', #ma
    '\u30DF', #mi
    '\u30E0', #mu
    '\u30E1', #me
    '\u30E2', #mo
    
    '\u30E4', #ya
    '\u30E6', #yu
    '\u30E8', #yo
    
    '\u30E9', #ra
    '\u30EA', #ri
    '\u30EB', #ru
    '\u30EC', #re
    '\u30ED', #ro
    
    '\u30EF', #wa
    
    '\u30F3', #n
]

tree = etree.parse('kanjidic2.xml')
root = tree.getroot()
ns = {"re": "http://exslt.org/regular-expressions"}

count = {}
readings = {}
groups = {}
joyo = ".//misc[./grade<=8]"
kanji = [i for n in root.xpath(f"./character[{joyo}]/literal/text()") for i in n] 
kanondic = {}
for char in chars:
    search = f"re:match(text(), '^{char}')"
    onreading = f".//reading[@r_type='ja_on' and {search}]"
    query = f"./character[{joyo} and {onreading}]"
    res = root.xpath(query, namespaces=ns)
    count[char] = len(res)
    kans = [ i for n in [x.xpath(".//literal/text()") for x in res] for i in n ]
    groups[char] = kans
    for e in res:
        keys = e.xpath(f"{onreading}/text()", namespaces=ns)
        value = e.xpath(f"literal/text()")
        if value[0] not in kanondic:
            kanondic[value[0]] = keys
        for key in keys:
            if key in readings:
                if value[0] not in readings[key]:
                    readings[key] = readings[key] + value
            else:
                readings[key] = value

sortedcount = {k: v for k, v in sorted(count.items(), key=lambda item: item[1])}
sortedreadings = {k: v for k, v in sorted(readings.items(), key=lambda item: len(item[1]))}
sortedgroups = {k: v for k, v in sorted(groups.items(), key=lambda item: len(item[1]))}
for k in sortedgroups:
    print(k, '\t', len(sortedgroups[k]),'\t', ''.join(sortedgroups[k]))
#for k in sortedreadings:
#    print(k, '\t', ''.join(sortedreadings[k]))
#can remove kanji readings that do not show up in a common word (which isnt usually written in 


hira = [ 'あ', 'あい', 'あく', 'あつ', 'あん', 'い', 'いき', 'いく', 'いち', 'いつ', 'いん', 'う', 'うん', 'うつ', 'えん', 'え', 'えき', 'えつ', 'えい', 'お', 'おう', 'おん', 'おつ', 'おく', 'か', 'が', 'かく', 'かい', 'がい', 'がく', 'かつ', 'かち', 'かん', 'がん', 'がつ', 'がっ', 'かっ', 'きゅう', 'きょう', 'ぎ', 'きゃく', 'き', 'きん', 'きく', 'きち', 'きつ', 'きゃ', 'ぎゃく', 'ぎゅう', 'きょ', 'ぎょ', 'ぎょう', 'きょく', 'ぎょく', 'ぎん', 'きけ', 'ぐ', 'く', 'ぐう', 'くう', 'くつ', 'くん', 'ぐん', 'げ', 'け', 'けい', 'けん', 'げん', 'げき', 'げい', 'けき', 'けつ', 'けち', 'げつ', 'ごう', 'こう', 'こく', 'こ', 'こつ', 'ご', 'ごく', 'ごん', 'こん', 'こち', 'さ', 'ざ', 'さい', 'ざい', 'さく', 'さん', 'さつ', 'ざつ', 'ざん', 'さっ', 'じょう', 'しょう', 'し', 'じ', 'しゃ', 'しょ', 'しゅ', 'しゃく', 'しん', 'しき', 'じく', 'しち', 'しつ', 'しゅう', 'じつ', 'じゃ', 'じゃく', 'じゅ', 'じゅう', 'しゅく', 'じっ', 'じゅっ', 'じゅく', 'しゅつ', 'じゅつ', 'しゅん', 'じゅん', 'じょ', 'しゃん', 'しょく', 'じき', 'じょく', 'じん', 'じか', 'すい', 'す', 'ず', 'すく', 'ずい', 'すう', 'すん', 'せい', 'せき', 'せん', 'せつ', 'ぜん', 'せ', 'ぜ', 'ぜい', 'せち', 'ぜつ', 'せんと', 'そう', 'そ', 'そく', 'ぞく', 'ぞう', 'そつ', 'そん', 'ぞん', 'たん', 'だ', 'た', 'たい', 'だあす', 'だい', 'たく', 'だく', 'たつ', 'だつ', 'だん', 'ちゅう', 'ち', 'ぢゅう', 'ちょう', 'ちょ', 'ちゃん', 'ちく', 'ちつ', 'ちゃ', 'ちゃく', 'ちゅ', 'ちん', 'ちょく', 'つ', 'つい', 'つう', 'て', 'てん', 'でき', 'てい', 'てき', 'で', 'でい', 'てつ', 'でん', 'とう', 'と', 'とん', 'どう', 'ど', 'とく', 'どく', 'とつ', 'どん', 'なん', 'ない', 'な', 'なっ', 'に', 'にゃく', 'にゃ', 'にゅう', 'にょ', 'にょう', 'にん', 'にく', 'にち', 'ぬ', 'ねん', 'ねい', 'ねつ', 'のん', 'のう', 'ばい', 'はん', 'は', 'はく', 'ば', 'はい', 'ばく', 'はち', 'はつ', 'ばつ', 'ばち', 'ばん', 'はっ', 'びょう', 'ひょう', 'びゃく', 'ひ', 'ひつ', 'び', 'ひゃく', 'ひん', 'びん', 'びつ', 'ぶん', 'ふ', 'ふく', 'ぶ', 'ふう', 'ふつ', 'ぶつ', 'ふん', 'ふらん', 'べい', 'へい', 'へつ', 'へき', 'べつ', 'へん', 'べん', 'ほ', 'ぼう', 'ほう', 'ほく', 'ほつ', 'ぼち', 'ほん', 'ぼん', 'ぼ', 'ほっ', 'ぼっ', 'ぼく', 'ぼつ', 'まい', 'ま', 'まあ', 'まく', 'まつ', 'まん', 'み', 'みょう', 'みつ', 'みゃく', 'みん', 'む', 'めい', 'めえとる', 'めつ', 'めん', 'も', 'もつ', 'もん', 'もう', 'もく', 'やく', 'や', 'ゆい', 'ゆう', 'ゆ', 'よう', 'よく', 'よ', 'らく', 'らい', 'ら', 'らん', 'らつ', 'りょう', 'りゅう', 'り', 'りく', 'りつ', 'りち', 'りっとる', 'りゃく', 'りょ', 'りょく', 'りき', 'りい', 'りん', 'る', 'るい', 'れん', 'れい', 'れつ', 'れき', 'れっき', 'れ', 'ろく', 'ろう', 'ろん', 'ろ', 'わ', 'わい', 'わく', 'わ', 'ん' ]

katatohira = {}
i = 0
for x in readings.keys():
    katatohira[x] = hira[i] 
    i = i + 1

commonkanreadings = {} 
for kan in kanondic.keys():
    for kata in kanondic[kan]:
        hon = katatohira[kata]
        html = requests.get(f"https://jisho.org/search/{kan}%20{hon}%20%23common")
        soup = BeautifulSoup(html.content, 'html.parser')
        nomatches = soup.find(id="no-matches")
        if nomatches is not None:
            print(kan, hon, "not found")
            break
        countstring = soup.find(id="primary").h4.span.text
        count = [int(x) for x in countstring.split() if x.isdigit()][0]
        if count > 0: 
            if kan in commonkanreadings:
                commonkanreadings[kan] = commonkanreadings[kan] + [kata]
            else:
                commonkanreadings[kan] = [kata]